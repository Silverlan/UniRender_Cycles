cmake_minimum_required(VERSION 3.12)

set(INCLUDE_DIRS)
function(add_include_dir IDENTIFIER)
	set(PRETTYNAME ${IDENTIFIER})
	set(ARGV ${ARGN})
	list(LENGTH ARGV ARGC)
	if(${ARGC} GREATER 0)
		list(GET ARGV 0 PRETTYNAME)
	endif()
	string(TOUPPER ${IDENTIFIER} UIDENTIFIER)

	set(${DEFAULT_DIR} "")
	set(DEPENDENCY_${UIDENTIFIER}_INCLUDE ${DEFAULT_DIR} CACHE PATH "Path to ${PRETTYNAME} include directory.")
	set(INCLUDE_DIRS ${INCLUDE_DIRS} DEPENDENCY_${UIDENTIFIER}_INCLUDE PARENT_SCOPE)
endfunction(add_include_dir)

set(LIBRARIES)
function(add_external_library IDENTIFIER)
	set(PRETTYNAME ${IDENTIFIER})
	set(ARGV ${ARGN})
	list(LENGTH ARGV ARGC)
	if(${ARGC} GREATER 0)
		list(GET ARGV 0 PRETTYNAME)
	endif()
	string(TOUPPER ${IDENTIFIER} UIDENTIFIER)

	set(DEPENDENCY_${UIDENTIFIER}_LIBRARY "" CACHE FILEPATH "Path to ${PRETTYNAME} library.")
	set(LIBRARIES ${LIBRARIES} DEPENDENCY_${UIDENTIFIER}_LIBRARY PARENT_SCOPE)
endfunction(add_external_library)

function(link_external_library IDENTIFIER)
	set(PRETTYNAME ${IDENTIFIER})
	set(ARGV ${ARGN})
	list(LENGTH ARGV ARGC)
	if(${ARGC} GREATER 0)
		list(GET ARGV 0 PRETTYNAME)
	endif()
	string(TOUPPER ${IDENTIFIER} UIDENTIFIER)

	set(${DEFAULT_DIR} "")
	set(DEPENDENCY_${UIDENTIFIER}_INCLUDE ${DEFAULT_DIR} CACHE PATH "Path to ${PRETTYNAME} include directory.")
	set(INCLUDE_DIRS ${INCLUDE_DIRS} DEPENDENCY_${UIDENTIFIER}_INCLUDE PARENT_SCOPE)

	set(DEPENDENCY_${UIDENTIFIER}_LIBRARY "" CACHE FILEPATH "Path to ${PRETTYNAME} library.")
	set(LIBRARIES ${LIBRARIES} DEPENDENCY_${UIDENTIFIER}_LIBRARY PARENT_SCOPE)
endfunction(link_external_library)

set(DEFINITIONS)
function(add_def DEF)
	set(DEFINITIONS ${DEFINITIONS} ${DEF} PARENT_SCOPE)
endfunction(add_def)

##### CONFIGURATION #####

set(PROJ_NAME icycles)

project(${PROJ_NAME} CXX)

set(CMAKE_CXX_STANDARD 20)
set(ENABLE_STATIC_LIBRARY_FLAG 0)

link_external_library(cycles_tbb)
link_external_library(cycles_glog)
link_external_library(gflags)

add_include_dir(cycles)
add_include_dir(cycles_atomic)
add_include_dir(cycles_pugixml)
add_include_dir(cycles_openimageio)
add_include_dir(cycles_openimagedenoise)
add_include_dir(cycles_openexr)
add_include_dir(cycles_embree)
add_include_dir(cycles_osl)
add_external_library(glew)
add_external_library(tiff)
add_external_library(lpng)
add_external_library(zlib)
add_external_library(jpeg)
add_external_library(lz4)

set(DEPENDENCY_CYCLES_LIBRARY_LOCATION "" CACHE FILEPATH "Path to cycles libraries.")
set(DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION "" CACHE FILEPATH "Path to cycles dependencies.")
set(DEPENDENCY_OPENEXR_LIBRARY_LOCATION "" CACHE FILEPATH "Path to openexr libraries.")
add_def(ICYCLES_DEFINE)
add_def(OIIO_STATIC_BUILD)
add_def(GLEW_STATIC)
add_def(WITH_SYSTEM_PUGIXML)
add_def(OIIO_STATIC_BUILD)
add_def(OIIO_STATIC_DEFINE)
add_def(WITH_OSL)
add_def(OSL_STATIC_BUILD)
add_def(OSL_STATIC_LIBRARY)
add_def(WITH_OPTIX)
add_def(WITH_EMBREE)
add_def(WITH_OPENSUBDIV)
add_def(WITH_OPENIMAGEDENOISE)
add_def(OIDN_STATIC_LIB)
if(WIN32)
	add_def(WITH_CYCLES_LOGGING)
endif()
add_def(GLOG_NO_ABBREVIATED_SEVERITIES)
add_def(GOOGLE_GLOG_DLL_DECL=__declspec\(dllexport\))
add_def("CCL_NAMESPACE_BEGIN=namespace ccl {")
add_def("CCL_NAMESPACE_END=}")

link_external_library(openexr_imath)
add_external_library(openexr_iex)
add_external_library(openexr_ilmthread)
add_external_library(openexr)
add_external_library(openexr_core)
add_external_library(openexr_util)

##### CONFIGURATION #####

set(LIB_TYPE SHARED)

foreach(def IN LISTS DEFINITIONS)
	add_definitions(-D${def})
endforeach(def)

function(def_vs_filters FILE_LIST)
	foreach(source IN LISTS FILE_LIST)
	    get_filename_component(source_path "${source}" PATH)
	    string(REPLACE "${CMAKE_CURRENT_LIST_DIR}" "" source_path_relative "${source_path}")
	    string(REPLACE "/" "//" source_path_msvc "${source_path_relative}")
	    source_group("${source_path_msvc}" FILES "${source}")
	endforeach()
endfunction(def_vs_filters)

file(GLOB_RECURSE SRC_FILES
    "${CMAKE_CURRENT_LIST_DIR}/src/*.h"
    "${CMAKE_CURRENT_LIST_DIR}/src/*.hpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/*.cpp"
    "${CMAKE_CURRENT_LIST_DIR}/src/*.c"
    "${CMAKE_CURRENT_LIST_DIR}/include/*.h"
    "${CMAKE_CURRENT_LIST_DIR}/include/*.hpp"
)
add_library(${PROJ_NAME} ${LIB_TYPE} ${SRC_FILES})
if(WIN32)
	target_compile_options(${PROJ_NAME} PRIVATE /wd4251)
	target_compile_options(${PROJ_NAME} PRIVATE /wd4996)
else()
	# Cycles uses an older ABI, so we have to as well
	target_compile_options(${PROJ_NAME} PRIVATE "-D_GLIBCXX_USE_CXX11_ABI=0")
endif()
def_vs_filters("${SRC_FILES}")

foreach(LIB IN LISTS LIBRARIES)
	target_link_libraries(${PROJ_NAME} ${${LIB}})
endforeach(LIB)

target_include_directories(${PROJ_NAME} PRIVATE ${CMAKE_CURRENT_LIST_DIR}/include)
target_include_directories(${PROJ_NAME} PRIVATE ${CMAKE_CURRENT_LIST_DIR}/src)

foreach(INCLUDE_PATH IN LISTS INCLUDE_DIRS)
	target_include_directories(${PROJ_NAME} PRIVATE ${${INCLUDE_PATH}})
endforeach(INCLUDE_PATH)

set(TARGET_PROPERTIES LINKER_LANGUAGE CXX)
if(DEFINED PRECOMPILED_HEADER)
	include(PrecompiledHeader.cmake)
	add_precompiled_header(${PROJ_NAME} "src/${PRECOMPILED_HEADER}.h" c++17 FORCEINCLUDE)
endif()
set_target_properties(${PROJ_NAME} PROPERTIES ${TARGET_PROPERTIES})

if(WIN32)
	target_link_libraries(${PROJ_NAME}
		opengl32
		glu32
		version
		shlwapi
	)
endif()

if(WIN32)
	set(LIB_PREFIX "")
	set(LIB_EXT ".lib")
else()
	set(LIB_PREFIX "lib")
	set(LIB_EXT ".a")
endif()

set(DEPENDENCY_CYCLES_UTIL_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_util${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_DEVICE_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_device${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_KERNEL_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_kernel${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_GRAPH_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_graph${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_SUBD_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_subd${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_BVH_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_bvh${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_CUEW_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}extern_cuew${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_INTEGRATOR_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_integrator${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_KERNEL_OSL_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_kernel_osl${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_SCENE_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_scene${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_SESSION_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}cycles_session${LIB_EXT} CACHE PATH "Path to library." FORCE)
set(DEPENDENCY_CYCLES_SKY_LIBRARY ${DEPENDENCY_CYCLES_LIBRARY_LOCATION}/${LIB_PREFIX}extern_sky${LIB_EXT} CACHE PATH "Path to library." FORCE)

# set(DEPENDENCY_OPENEXR_HALF_LIBRARY ${DEPENDENCY_OPENEXR_LIBRARY_LOCATION}/${LIB_PREFIX}Half-2_3_static${LIB_EXT} CACHE PATH "Path to library." FORCE)
# set(DEPENDENCY_OPENEXR_IEX_LIBRARY ${DEPENDENCY_OPENEXR_LIBRARY_LOCATION}/${LIB_PREFIX}Iex-2_3_static${LIB_EXT} CACHE PATH "Path to library." FORCE)
# set(DEPENDENCY_OPENEXR_IEX_MATH_LIBRARY ${DEPENDENCY_OPENEXR_LIBRARY_LOCATION}/${LIB_PREFIX}IexMath-2_3_static${LIB_EXT} CACHE PATH "Path to library." FORCE)
# set(DEPENDENCY_OPENEXR_ILM_IMF_LIBRARY ${DEPENDENCY_OPENEXR_LIBRARY_LOCATION}/${LIB_PREFIX}IlmImf-2_3_static${LIB_EXT} CACHE PATH "Path to library." FORCE)
# set(DEPENDENCY_OPENEXR_ILM_IMF_UTIL ${DEPENDENCY_OPENEXR_LIBRARY_LOCATION}/${LIB_PREFIX}IlmImfUtil-2_3_static${LIB_EXT} CACHE PATH "Path to library." FORCE)
# set(DEPENDENCY_OPENEXR_ILM_THREAD ${DEPENDENCY_OPENEXR_LIBRARY_LOCATION}/${LIB_PREFIX}IlmThread-2_3_static${LIB_EXT} CACHE PATH "Path to library." FORCE)
# set(DEPENDENCY_OPENEXR_IMATH ${DEPENDENCY_OPENEXR_LIBRARY_LOCATION}/${LIB_PREFIX}Imath-2_3_static${LIB_EXT} CACHE PATH "Path to library." FORCE)

if(WIN32)
    set(LIBYAML_NAME "libyaml-cpp")
else()
    set(LIBYAML_NAME "yaml-cpp")
endif()

SET(CYCLES_LIBRARIES
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/osl/lib/${LIB_PREFIX}oslcomp${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/osl/lib/${LIB_PREFIX}oslexec${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/osl/lib/${LIB_PREFIX}oslnoise${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/osl/lib/${LIB_PREFIX}oslquery${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMAggressiveInstCombine${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMAnalysis${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMAsmParser${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMBinaryFormat${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMBitReader${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMBitWriter${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMBitstreamReader${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCFGuard${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCodeGen${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCore${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCoroutines${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMCoverage${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDWARFLinker${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoCodeView${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoDWARF${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoGSYM${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoMSF${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDebugInfoPDB${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDemangle${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMDlltoolDriver${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMExecutionEngine${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMExtensions${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMFileCheck${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMFrontendOpenACC${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMFrontendOpenMP${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMFuzzMutate${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMGlobalISel${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMHelloNew${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMIRReader${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMInstCombine${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMInstrumentation${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMInterfaceStub${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMInterpreter${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMJITLink${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLTO${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLibDriver${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLineEditor${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLinker${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMC${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMCA${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMCDisassembler${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMCJIT${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMCParser${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMMIRParser${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMObjCARCOpts${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMObject${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMObjectYAML${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMOption${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMOrcJIT${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMOrcShared${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMOrcTargetProcess${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMPasses${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMProfileData${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMRemarks${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMRuntimeDyld${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMScalarOpts${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMSelectionDAG${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMSupport${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMSymbolize${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMTableGen${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMTarget${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMTextAPI${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMTransformUtils${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMVectorize${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMWindowsManifest${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86AsmParser${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86CodeGen${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86Desc${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86Disassembler${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMX86Info${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMXRay${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMipo${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMLTO${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMRemarks${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}LLVMAsmPrinter${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangAPINotes${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangARCMigrate${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangAST${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangASTMatchers${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangAnalysis${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangBasic${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangCodeGen${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangCrossTU${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangDependencyScanning${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangDirectoryWatcher${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangDriver${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangDynamicASTMatchers${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangEdit${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangFormat${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangFrontend${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangFrontendTool${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangHandleCXX${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangHandleLLVM${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangIndex${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangIndexSerialization${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangLex${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangParse${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangRewrite${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangRewriteFrontend${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangSema${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangSerialization${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangStaticAnalyzerCheckers${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangStaticAnalyzerCore${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangStaticAnalyzerFrontend${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangTesting${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangTooling${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingASTDiff${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingCore${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingInclusions${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingRefactoring${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangToolingSyntax${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/${LIB_PREFIX}clangTransformer${LIB_EXT}

	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openjpeg/lib/${LIB_PREFIX}openjp2${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/pugixml/lib/${LIB_PREFIX}pugixml${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}embree3${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}embree_avx${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}embree_avx2${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}embree_sse42${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}lexers${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}math${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}simd${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}sys${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/embree/lib/${LIB_PREFIX}tasking${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openvdb/lib/${LIB_PREFIX}openvdb${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openimageio/lib/${LIB_PREFIX}OpenImageIO${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openimageio/lib/${LIB_PREFIX}OpenImageIO_Util${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openimagedenoise/lib/${LIB_PREFIX}OpenImageDenoise${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openimagedenoise/lib/${LIB_PREFIX}common${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openimagedenoise/lib/${LIB_PREFIX}dnnl${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opensubdiv/lib/${LIB_PREFIX}osdCPU${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opensubdiv/lib/${LIB_PREFIX}osdGPU${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opencolorio/lib/${LIB_PREFIX}OpenColorIO${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opencolorio/lib/${LIB_PREFIX}${LIBYAML_NAME}${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opencolorio/lib/${LIB_PREFIX}pystring${LIB_EXT}

	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/webp/lib/${LIB_PREFIX}webp${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/webp/lib/${LIB_PREFIX}webpdemux${LIB_EXT}
	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/webp/lib/${LIB_PREFIX}webpmux${LIB_EXT}


	${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/alembic/lib/${LIB_PREFIX}Alembic${LIB_EXT}

	${DEPENDENCY_CYCLES_UTIL_LIBRARY}
	${DEPENDENCY_CYCLES_DEVICE_LIBRARY}
	${DEPENDENCY_CYCLES_KERNEL_LIBRARY}
	${DEPENDENCY_CYCLES_GRAPH_LIBRARY}
	${DEPENDENCY_CYCLES_SUBD_LIBRARY}
	${DEPENDENCY_CYCLES_BVH_LIBRARY}
	${DEPENDENCY_CYCLES_CUEW_LIBRARY}
	${DEPENDENCY_CYCLES_INTEGRATOR_LIBRARY}
	${DEPENDENCY_CYCLES_KERNEL_OSL_LIBRARY}
	${DEPENDENCY_CYCLES_SCENE_LIBRARY}
	${DEPENDENCY_CYCLES_SESSION_LIBRARY}
	${DEPENDENCY_CYCLES_SKY_LIBRARY}
)

if(WIN32)
	SET(CYCLES_LIBRARIES
		${CYCLES_LIBRARIES}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/llvm/lib/libclang${LIB_EXT}

		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_filesystem-vc142-mt-x64-1_78${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_regex-vc142-mt-x64-1_78${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_system-vc142-mt-x64-1_78${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_thread-vc142-mt-x64-1_78${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_date_time-vc142-mt-x64-1_78${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_wave-vc142-mt-x64-1_78${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_chrono-vc142-mt-x64-1_78${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_atomic-vc142-mt-x64-1_78${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_serialization-vc142-mt-x64-1_78${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}Iex_s${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}IlmThread_s${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/imath/lib/${LIB_PREFIX}Imath_s${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}OpenEXR_s${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}OpenEXRCore_s${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}OpenEXRUtil_s${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opencolorio/lib/${LIB_PREFIX}libexpatMD${LIB_EXT}
	)
else()
	SET(CYCLES_LIBRARIES
		${CYCLES_LIBRARIES}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_filesystem${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_regex${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_system${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_thread${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_date_time${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_wave${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_chrono${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_atomic${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/boost/lib/libboost_serialization${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}Iex${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}IlmThread${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/imath/lib/${LIB_PREFIX}Imath${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}OpenEXR${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}OpenEXRCore${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/openexr/lib/${LIB_PREFIX}OpenEXRUtil${LIB_EXT}
		${DEPENDENCY_CYCLES_DEPENDENCIES_LOCATION}/opencolorio/lib/${LIB_PREFIX}expat${LIB_EXT}
	)
endif()

target_link_libraries(${PROJ_NAME} ${CYCLES_LIBRARIES})
if(UNIX)
	# Link a few more times on Linux so we don't have to bother trying to find the right linking order...
	target_link_libraries(${PROJ_NAME} ${CYCLES_LIBRARIES})
	
	foreach(LIB IN LISTS LIBRARIES)
		target_link_libraries(${PROJ_NAME} ${${LIB}})
	endforeach(LIB)
	
	target_link_libraries(${PROJ_NAME} ${CYCLES_LIBRARIES})
endif()